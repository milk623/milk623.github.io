var pet = [
    {"name":"테스트","initnum":24,"hp":34,"atk":40,"def":18,"agi":24},
    {"name":"쿠쿠","initnum":20,"hp":18,"atk":22,"def":10,"agi":36},
];

let btnName = "";
const result = [];

function preciseRound(num) {
    return Math.round(num * 1e12) / 1e12;
}

function limitDecimalPlaces(number, places) {
    var power = Math.pow(10, places);
    return (Math.floor(number * power) / power).toFixed(places);
}

function setSRank(copiedPet) {
    $(".srank").remove();

    let rank = 0;
    const sumStats = copiedPet.hp + copiedPet.atk + copiedPet.def + copiedPet.agi;
    if (copiedPet.rank > 0) {
        rank = copiedPet.rank;
    } else if (sumStats >= 110) rank = 435;
    else if (sumStats >= 105) rank = 455;
    else if (sumStats >= 100) rank = 475;
    else if (sumStats >= 95) rank = 495;
    else if (sumStats >= 90) rank = 515;
    else if (sumStats >= 85) rank = 535;
    else if (sumStats >= 80) rank = 555;
    else rank = 575;

    // base
    copiedPet.hp  += 2;
    copiedPet.atk += 2;
    copiedPet.def += 2;
    copiedPet.agi += 2;

    // bonus
    copiedPet.hp  += 2.5;
    copiedPet.atk += 2.5;
    copiedPet.def += 2.5;
    copiedPet.agi += 2.5;

    // 계산
    const hp  = preciseRound(copiedPet.initnum * copiedPet.hp / 100);
    const atk = preciseRound(copiedPet.initnum * copiedPet.atk / 100);
    const def = preciseRound(copiedPet.initnum * copiedPet.def / 100);
    const agi = preciseRound(copiedPet.initnum * copiedPet.agi / 100);

    const resultHp  = preciseRound((hp*4) + atk + def + agi);
    const resultAtk = preciseRound((hp*0.1) + atk + (def*0.1) + (agi*0.05));
    const resultDef = preciseRound((hp*0.1) + (atk*0.1) + def + (agi*0.05));
    const resultAgi = agi;

    const upHp  = preciseRound(copiedPet.hp  * rank / 10000);
    const upAtk = preciseRound(copiedPet.atk * rank / 10000);
    const upDef = preciseRound(copiedPet.def * rank / 10000);
    const upAgi = preciseRound(copiedPet.agi * rank / 10000);

    const resultUpHp  = preciseRound((upHp*4) + upAtk + upDef + upAgi);
    const resultUpAtk = preciseRound((upHp*0.1) + upAtk + (upDef*0.1) + (upAgi*0.05));
    const resultUpDef = preciseRound((upHp*0.1) + (upAtk*0.1) + upDef + (upAgi*0.05));
    const resultUpAgi = upAgi;

    const resultSum = preciseRound(resultUpAtk + resultUpDef + resultUpAgi);

    $('#myPet tbody').append(
        '<tr class="srank">' + 
        '<td>S 초기치</td>' + 
        '<td>' + limitDecimalPlaces(resultHp, 2) + '</td>' + 
        '<td>' + limitDecimalPlaces(resultAtk, 2) + '</td>' + 
        '<td>' + limitDecimalPlaces(resultDef, 2) + '</td>' + 
        '<td>' + limitDecimalPlaces(resultAgi, 2) + '</td>' + 
        '<td></td>' + 
        '</tr>' + 
        '<tr class="srank">' + 
        '<td>S 성장률</td>' + 
        '<td>' + resultUpHp.toFixed(2) + '</td>' + 
        '<td>' + resultUpAtk.toFixed(2) + '</td>' + 
        '<td>' + resultUpDef.toFixed(2) + '</td>' + 
        '<td>' + resultUpAgi.toFixed(2) + '</td>' + 
        '<td>' + resultSum.toFixed(2) + '</td>' + 
        '</tr>'
    );

    if (btnName == "search") {
        $("#hp").val(parseInt(resultHp,10));
        $("#atk").val(parseInt(resultAtk,10));
        $("#def").val(parseInt(resultDef,10));
        $("#agi").val(parseInt(resultAgi,10));
    }
}

function setBase(foundPet) {
    $('#result tbody').empty();
    result.length = 0;

    const baseCnt = 5;
    const baseInit = -2;
    const base = {"hp":-2,"atk":-2,"def":-2,"agi":-2};

    for (let i=0;i<baseCnt;i++){
        for (let ii=0;ii<baseCnt;ii++){
            for (let iii=0;iii<baseCnt;iii++){
                for (let iiii=0;iiii<baseCnt;iiii++){
                    setBonus(foundPet, base);
                    base.hp++;
                    if(base.hp==3) base.hp=baseInit;
                }
                base.atk++;
                if(base.atk==3) base.atk=baseInit;
            }
            base.def++;
            if(base.def==3) base.def=baseInit;
        }
        base.agi++;
        if(base.agi==3) base.agi=baseInit;
    }
    print();
}

function setBonus(foundPet, base){
    const bonus = {"hp":0,"atk":0,"def":0,"agi":0};
    for (let i=0;i<11;i++){
        for (let ii=0;ii<11;ii++){
            for (let iii=0;iii<11;iii++){
                for (let iiii=0;iiii<11;iiii++){
                    if(bonus.hp + bonus.atk + bonus.def + bonus.agi == 10){
                        addData(foundPet, base, bonus);
                    }
                    bonus.hp++;
                    if(bonus.hp==11) bonus.hp=0;
                }
                bonus.atk++;
                if(bonus.atk==11) bonus.atk=0;
            }
            bonus.def++;
            if(bonus.def==11) bonus.def=0;
        }
        bonus.agi++;
        if(bonus.agi==11) bonus.agi=0;
    }
}

function addData(foundPet, base, bonus){
    const hp  = preciseRound(foundPet.initnum * (foundPet.hp  + base.hp  + bonus.hp) / 100);
    const atk = preciseRound(foundPet.initnum * (foundPet.atk + base.atk + bonus.atk) / 100);
    const def = preciseRound(foundPet.initnum * (foundPet.def + base.def + bonus.def) / 100);
    const agi = preciseRound(foundPet.initnum * (foundPet.agi + base.agi + bonus.agi) / 100);

    const stat = {"rank":0,"hp":0,"atk":0,"def":0,"agi":0,"baseHp":0,"baseAtk":0,"baseDef":0,"baseAgi":0,"bonusHp":0,"bonusAtk":0,"bonusDef":0,"bonusAgi":0,"poison":0};
    stat.hp  = preciseRound((hp*4) + atk + def + agi);
    stat.atk = preciseRound((hp*0.1)+atk+(def*0.1)+(agi*0.05));
    stat.def = preciseRound((hp*0.1)+(atk*0.1)+def+(agi*0.05));
    stat.agi = agi;

    stat.poison = parseInt(foundPet.initnum*(foundPet.hp+base.hp+bonus.hp),10)
                + parseInt(foundPet.initnum*(foundPet.atk+base.atk+bonus.atk),10)
                + parseInt(foundPet.initnum*(foundPet.def+base.def+bonus.def),10)
                + parseInt(foundPet.initnum*(foundPet.agi+base.agi+bonus.agi),10);
    stat.poison = preciseRound((stat.poison/100-20)/4);
    if(stat.poison<1) stat.poison=1;

    if(btnName=="calculate"){
        if(Math.floor(stat.hp)  === parseInt($("#hp").val(),10) &&
           Math.floor(stat.atk) === parseInt($("#atk").val(),10) &&
           Math.floor(stat.def) === parseInt($("#def").val(),10) &&
           Math.floor(stat.agi) === parseInt($("#agi").val(),10)){
            stat.rank = base.hp+base.atk+base.def+base.agi;
            stat.baseHp=base.hp; stat.baseAtk=base.atk; stat.baseDef=base.def; stat.baseAgi=base.agi;
            stat.bonusHp=bonus.hp; stat.bonusAtk=bonus.atk; stat.bonusDef=bonus.def; stat.bonusAgi=bonus.agi;
            result.push(stat);
        }
    } else if(btnName=="search"){
        if(base.hp+base.atk+base.def+base.agi==8){
            stat.rank = base.hp+base.atk+base.def+base.agi;
            stat.baseHp=base.hp; stat.baseAtk=base.atk; stat.baseDef=base.def; stat.baseAgi=base.agi;
            stat.bonusHp=bonus.hp; stat.bonusAtk=bonus.atk; stat.bonusDef=bonus.def; stat.bonusAgi=bonus.agi;
            result.push(stat);
        }
    }
}

function print(){
    result.sort((a,b)=>{
        if(b.rank !== a.rank) return b.rank-a.rank;
        if(b.hp !== a.hp) return b.hp-a.hp;
        if(b.atk !== a.atk) return b.atk-a.atk;
        if(b.def !== a.def) return b.def-a.def;
        return b.agi-a.agi;
    });

    const resultContainer = document.getElementById("calculationResult");
    resultContainer.innerHTML = ""; // Clear previous results

    let html = '<h3>계산 결과</h3>';

    if(btnName=="search"){
        const name=$("#name").val();
        html += `<h4>[${name}]의 8등급 분포</h4>`;
        
        const countMap = {};
        const totalCount=result.length;
        result.forEach(obj=>{
            const key = parseInt(obj.hp,10)+', '+parseInt(obj.atk,10)+', '+parseInt(obj.def,10)+', '+parseInt(obj.agi,10);
            countMap[key]=(countMap[key]||0)+1;
        });

        html += '<div class="table-responsive"><table class="table"><thead><tr><th>스탯 (내구,공격,방어,순발)</th><th>건수</th><th>확률</th></tr></thead><tbody>';
        for(const key in countMap){
            const count = countMap[key];
            const percentage=(count/totalCount*100).toFixed(2);
            html+= `<tr><td>${key}</td><td>${count}건</td><td>${percentage}%</td></tr>`;
        }
        html += '</tbody></table></div>';

    } else if(btnName=="calculate"){
        const rankCounts={};
        for(let i=0;i<result.length;i++){
            const rank=result[i].rank;
            rankCounts[rank]=(rankCounts[rank]||0)+1;
        }
        const ranks=Object.keys(rankCounts).sort((a,b)=>b-a);
        const name=$("#name").val();
        const hp=$("#hp").val(); const atk=$("#atk").val(); const def=$("#def").val(); const agi=$("#agi").val();
        html += `<h4>[${name}][${hp},${atk},${def},${agi}]</h4>`;
        
        const totalCount=Object.values(rankCounts).reduce((a,b)=>a+b,0);

        html += '<div class="table-responsive"><table class="table"><thead><tr><th>등급</th><th>건수</th><th>확률</th></tr></thead><tbody>';
        for(const rank of ranks){
            const count=rankCounts[rank];
            const percentage=(count/totalCount*100).toFixed(2);
            html+= `<tr><td>${rank} 등급</td><td>${count} 건</td><td>${percentage}%</td></tr>`;
        }
        html += '</tbody></table></div>';
    }

    resultContainer.innerHTML = html;
}

$(document).ready(function(){
    $("#name").on("keydown",function(e){ if(e.key==='Enter') $("#search").click(); });

    $("#search").on("click",function(){
        const foundPet = pet.find(p=>p.name==$("#name").val());
        if(!foundPet){ alert("펫 정보를 찾을 수 없습니다."); return; }
        btnName="search";
        const copiedPet=JSON.parse(JSON.stringify(foundPet));
        setSRank(copiedPet);
        setBase(foundPet);
    });

    $("#calculate").on("click",function(){
        const foundPet = pet.find(p=>p.name==$("#name").val());
        if(!foundPet){ alert("펫 정보를 찾을 수 없습니다."); return; }
        btnName="calculate";
        const copiedPet=JSON.parse(JSON.stringify(foundPet));
        setSRank(copiedPet);
        setBase(foundPet);
    });
});
